<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>go 依赖编译问题</title>
    <link href="/2023/01/31/Go-%E4%BE%9D%E8%B5%96%E7%BC%96%E8%AF%91%E9%97%AE%E9%A2%98/"/>
    <url>/2023/01/31/Go-%E4%BE%9D%E8%B5%96%E7%BC%96%E8%AF%91%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h3 id="go-vendor依赖处理"><a href="#go-vendor依赖处理" class="headerlink" title="go vendor依赖处理"></a>go vendor依赖处理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">删除 go.sum/go.mod<br>go mod init 项目名<br>go mod tidy<br>go mod vendor<br>go get -v -u github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common //拉取新添加的依赖到本地<br>go mod download<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>算法精解</title>
    <link href="/2023/01/26/%E7%AE%97%E6%B3%95%E7%B2%BE%E8%A7%A3/"/>
    <url>/2023/01/26/%E7%AE%97%E6%B3%95%E7%B2%BE%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h2 id="算法的基本"><a href="#算法的基本" class="headerlink" title="算法的基本"></a>算法的基本</h2><p><strong>时间复杂度</strong>：程序运行的时间增长程度，随着数据量的增加而增加<br><strong>空间复杂度</strong>：程序运行的空间增长程度，随着数据量的增加而增加<br>因为时间一去不返，空间复杂度可以通过增加内存解决；通常我们重点关注时间复杂度<br>我们通过大O表示复杂度<br>常见复杂度的大小<br>     O(1)&lt;O(logn)&lt;O(n)&lt;O(nlogn)&lt;(n^2)&lt;(n^3)&lt;(2^n)&lt;O(2^n)&lt;O(n!)&lt;O(n^n)</p><h2 id="数组-amp-amp-链表类型"><a href="#数组-amp-amp-链表类型" class="headerlink" title="数组&amp;&amp;链表类型"></a>数组&amp;&amp;链表类型</h2><h3 id="斐波那契数列"><a href="#斐波那契数列" class="headerlink" title="斐波那契数列"></a>斐波那契数列</h3><pre><code class="hljs">题目:写一个函数，输入 n ，求斐波那契（Fibonacci）数列的第 n 项（即 F(N)）。斐波那契数列的定义如下：    F(0) = 0,   F(1) = 1    F(N) = F(N - 1) + F(N - 2), 其中 N &gt; 1.    斐波那契数列由 0 和 1 开始，之后的斐波那契数就是由之前的两数相加而得出</code></pre><blockquote><p>方法一：递归，时间复杂度 2^n  类似二叉树</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs JAVA"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">fib</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span> &#123;<br>        <span class="hljs-keyword">if</span> (n == <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> ( n == <span class="hljs-number">1</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span>  fib(n-<span class="hljs-number">1</span>) + fib(n-<span class="hljs-number">2</span>);<br>    &#125;<br>&#125; <br></code></pre></td></tr></table></figure><blockquote><p>方法二：递归优化，时间复杂度 n</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs JAVA"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br>     <span class="hljs-keyword">private</span> HashMap&lt;Integer, Integer&gt;  temp = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>();<br>     <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">fib</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span> &#123;<br>          <span class="hljs-keyword">if</span> (n == <span class="hljs-number">0</span>) &#123;<br>               <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>          &#125;<br>          <span class="hljs-keyword">if</span> ( n == <span class="hljs-number">1</span>) &#123;<br>               <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>          &#125;<br>          <span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span> != temp.get(n)) &#123;<br>               <span class="hljs-keyword">return</span> temp.get(n);<br>          &#125;<br>          <span class="hljs-keyword">else</span> &#123;<br>               <span class="hljs-type">int</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> (fib(n-<span class="hljs-number">1</span>) + fib(n-<span class="hljs-number">2</span>));<br>               temp.put(n,result);<br>               <span class="hljs-keyword">return</span>  result;<br>          &#125;<br>     &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>方案三 循环 时间复杂度 n</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs JAVA"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">fib</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span> &#123;<br>       <span class="hljs-keyword">if</span>(n &lt;<span class="hljs-number">2</span>) &#123;<br>           <span class="hljs-keyword">return</span> n;<br>       &#125;<br>       <span class="hljs-type">int</span> <span class="hljs-variable">prepre</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>       <span class="hljs-type">int</span> <span class="hljs-variable">pre</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br>       <span class="hljs-type">int</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>       <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">2</span>; i &lt;= n; i++) &#123;<br>            result = (prepre + pre);<br>            prepre = pre;<br>            pre = result; <br>       &#125;<br>       <span class="hljs-keyword">return</span> result;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="斐波"><a href="#斐波" class="headerlink" title="斐波"></a>斐波</h3>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Bash脚本</title>
    <link href="/2023/01/22/Bash%E8%84%9A%E6%9C%AC/"/>
    <url>/2023/01/22/Bash%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<h3 id="1-输出数据库数据到文本"><a href="#1-输出数据库数据到文本" class="headerlink" title="1. 输出数据库数据到文本"></a>1. 输出数据库数据到文本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">:&gt; old-subuin-list <br><br>bash mysql-hk.sh &gt;&gt;old-subuin-list &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">select zone as &#x27;&#x27;, uin as &#x27;&#x27;, sub_account_uin  as &#x27;&#x27;,app_id as &#x27;&#x27; from cn_apigw as b, (select id  from cn_apigw where status=&quot;Running&quot; group by uin, app_id , id, sub_account_uin order by uin) as a where a.id = b.id;</span><br><span class="hljs-string">EOF</span><br><br>bash mysql-gz.sh &gt;&gt;old-subuin-list &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">select zone as &#x27;&#x27;, uin as &#x27;&#x27;, sub_account_uin  as &#x27;&#x27;,app_id as &#x27;&#x27; from cn_apigw as b, (select id  from cn_apigw where status=&quot;Running&quot; group by uin, app_id , id, sub_account_uin order by uin) as a where a.id = b.id;</span><br><span class="hljs-string">EOF</span><br><br>bash mysql-sh.sh &gt;&gt;old-subuin-list &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">select zone as &#x27;&#x27;, uin as &#x27;&#x27;, sub_account_uin  as &#x27;&#x27;,app_id as &#x27;&#x27; from cn_apigw as b, (select id  from cn_apigw where status=&quot;Running&quot; group by uin, app_id , id, sub_account_uin order by uin) as a where a.id = b.id;</span><br><span class="hljs-string">EOF</span><br>bash mysql-bj.sh &gt;&gt;old-subuin-list &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">select zone as &#x27;&#x27;, uin as &#x27;&#x27;, sub_account_uin  as &#x27;&#x27;,app_id as &#x27;&#x27; from cn_apigw as b, (select id  from cn_apigw where status=&quot;Running&quot; group by uin, app_id , id, sub_account_uin order by uin) as a where a.id = b.id;</span><br><span class="hljs-string">EOF</span><br><br>sed -ri <span class="hljs-string">&#x27;/^\s*$/d&#x27;</span> old-subuin-list<br></code></pre></td></tr></table></figure><h4 id="mysql-bj-sh脚本示例"><a href="#mysql-bj-sh脚本示例" class="headerlink" title="mysql-bj.sh脚本示例"></a>mysql-bj.sh脚本示例</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mysql -h11.15.126.6 -uapigw -p<span class="hljs-string">&#x27;ap@890&#x27;</span> -Dnig<br></code></pre></td></tr></table></figure><h3 id="2-交互式数据库脚本"><a href="#2-交互式数据库脚本" class="headerlink" title="2. 交互式数据库脚本"></a>2. 交互式数据库脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment">#!bin/bash</span><br><br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;May I ask your rm instance_id: &quot;</span> gateway_id<br><br><span class="hljs-built_in">read</span> -p  <span class="hljs-string">&quot;are you sure to rm <span class="hljs-variable">$gateway_id</span> ?[y/n]&quot;</span> input<br><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$input</span><br><br><span class="hljs-keyword">if</span> [[ <span class="hljs-variable">$input</span> = <span class="hljs-string">&quot;y&quot;</span> ]];<span class="hljs-keyword">then</span><br><br>  exist=$(<span class="hljs-built_in">source</span> ./mysql-hk.sh <span class="hljs-string">&quot;SELECT 1  FROM cn_apigw  WHERE gateway_id=&#x27;<span class="hljs-variable">$gateway_id</span>&#x27;&quot;</span> | awk <span class="hljs-string">&#x27;NR ==2 &#123;print $1&#125;&#x27;</span>)<br><br>  <span class="hljs-built_in">echo</span> <span class="hljs-variable">$exist</span><br><br>  <span class="hljs-keyword">if</span> [[ <span class="hljs-variable">$exist</span> = 1 ]];<span class="hljs-keyword">then</span><br><br>     <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;hk&quot;</span><br><br>     <span class="hljs-built_in">read</span> -p  <span class="hljs-string">&quot;are you sure to rm <span class="hljs-variable">$gateway_id</span> ?[y/n]&quot;</span> input<br><br>     <span class="hljs-keyword">if</span> [[ <span class="hljs-variable">$input</span> = <span class="hljs-string">&quot;y&quot;</span> ]];<span class="hljs-keyword">then</span><br><br>       result=$(<span class="hljs-built_in">source</span> ./mysql-hk.sh <span class="hljs-string">&quot;select zone as &#x27;&#x27;, uin as &#x27;&#x27;,sub_account_uin as &#x27;&#x27;,app_id as &#x27;&#x27;,gateway_id as &#x27;&#x27; from cn_apigw where gateway_id=&quot;</span><span class="hljs-variable">$gateway_id</span><span class="hljs-string">&quot;  order by uin; delete from cn_apigw where gateway_id=&quot;</span><span class="hljs-variable">$gateway_id</span><span class="hljs-string">&quot;&quot;</span>)<br><br>       <span class="hljs-built_in">echo</span> <span class="hljs-variable">$result</span><br><br>     <span class="hljs-keyword">else</span><br><br>       <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Cancelled rm&quot;</span><br><br>     <span class="hljs-keyword">fi</span><br><br>  <span class="hljs-keyword">else</span><br><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;hk does not exist <span class="hljs-variable">$gateway_id</span>&quot;</span><br><br>  <span class="hljs-keyword">fi</span><br><br><span class="hljs-keyword">else</span><br><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Cancelled rm&quot;</span><br><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-built_in">exit</span> 0<br><br></code></pre></td></tr></table></figure><h4 id="mysql-hk-sh脚本示例"><a href="#mysql-hk-sh脚本示例" class="headerlink" title="mysql-hk.sh脚本示例"></a>mysql-hk.sh脚本示例</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#!bin/bash</span><br>mysql -h127.0.0.1  -uroot -p<span class="hljs-string">&#x27;password&#x27;</span> -Dcn &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">$1</span><br><span class="hljs-string">EOF</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>网络抓包</title>
    <link href="/2023/01/19/%E7%BD%91%E7%BB%9C%E6%8A%93%E5%8C%85/"/>
    <url>/2023/01/19/%E7%BD%91%E7%BB%9C%E6%8A%93%E5%8C%85/</url>
    
    <content type="html"><![CDATA[<h4 id="tcpdump"><a href="#tcpdump" class="headerlink" title="tcpdump"></a>tcpdump</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tcpdump -i any -nn host 192.168.233.1 -w test.pcap<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>容器编排 Kubernets</title>
    <link href="/2023/01/19/%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92-Kubernets/"/>
    <url>/2023/01/19/%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92-Kubernets/</url>
    
    <content type="html"><![CDATA[<h4 id="删除pod"><a href="#删除pod" class="headerlink" title="删除pod"></a>删除pod</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>kubectl delete pod cloud-api-manag-6469989887-tw9rk  //删除pod<br><br></code></pre></td></tr></table></figure><h4 id="进入pod"><a href="#进入pod" class="headerlink" title="进入pod"></a>进入pod</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>kubectl <span class="hljs-built_in">exec</span>  tools-qci-operator-76d898686-rskmn -ntce -it bash<br><br></code></pre></td></tr></table></figure><h4 id="修改pod配置"><a href="#修改pod配置" class="headerlink" title="修改pod配置"></a>修改pod配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>kubectl edit deployment apigw-v3   -n carwynma  //修改pod配置修改<br><br></code></pre></td></tr></table></figure><h4 id="查看pods状态"><a href="#查看pods状态" class="headerlink" title="查看pods状态"></a>查看pods状态</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>kubectl get pod -o wide -n carwynma  //查看状态<br><br></code></pre></td></tr></table></figure><h4 id="查看ns和ip"><a href="#查看ns和ip" class="headerlink" title="查看ns和ip"></a>查看ns和ip</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>kubectl get svc -n carwynma     //查看namespace的状态和upstream的ip<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>容器 Docker</title>
    <link href="/2023/01/19/%E5%AE%B9%E5%99%A8-Docker/"/>
    <url>/2023/01/19/%E5%AE%B9%E5%99%A8-Docker/</url>
    
    <content type="html"><![CDATA[<h4 id="登陆远程镜像仓库"><a href="#登陆远程镜像仓库" class="headerlink" title="登陆远程镜像仓库"></a>登陆远程镜像仓库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>docker login -u 100017676953 -p <span class="hljs-string">&#x27;CTCD*@fight#2648&#x27;</span>  ccr.ccs.com/api-images<br><br></code></pre></td></tr></table></figure><h4 id="构建镜像"><a href="#构建镜像" class="headerlink" title="构建镜像"></a>构建镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>当前路径准备好Dockerfile<br><br>docker build  --no-cache  -f Dockerfile . -t ccr.ccs.com/api-images/apig-ld:v1.7  --progress=plain &gt;&gt; builder.log   //不使用缓存构建，且输出构建日志到builder.log<br><br></code></pre></td></tr></table></figure><h4 id="显示本地镜像"><a href="#显示本地镜像" class="headerlink" title="显示本地镜像"></a>显示本地镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>docker images|<span class="hljs-built_in">head</span> -n3<br><br></code></pre></td></tr></table></figure><h4 id="推送镜像"><a href="#推送镜像" class="headerlink" title="推送镜像"></a>推送镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>docker push hub.com/api/inspect:0.0.3<br><br></code></pre></td></tr></table></figure><h4 id="运行镜像"><a href="#运行镜像" class="headerlink" title="运行镜像"></a>运行镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>docker run -dit hub.com/api/inspect:0.0.1<br><br></code></pre></td></tr></table></figure><h4 id="进入实例"><a href="#进入实例" class="headerlink" title="进入实例"></a>进入实例</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>docker <span class="hljs-built_in">exec</span> -it a3549e935718716d096dc  bash<br><br></code></pre></td></tr></table></figure><h4 id="清理docker空间"><a href="#清理docker空间" class="headerlink" title="清理docker空间"></a>清理docker空间</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>docker system <span class="hljs-built_in">df</span><br><br>docker system prune --all --force<br><br></code></pre></td></tr></table></figure><h4 id="更改镜像版本号"><a href="#更改镜像版本号" class="headerlink" title="更改镜像版本号"></a>更改镜像版本号</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>docker images -q --filter reference=hub.com/tceforqci_arm/api-nginx-build:v1  //检索需要修改<span class="hljs-built_in">id</span>的镜像<br><br>docker tag  34f3841dbc96    hub.com/tceforqci_arm/api-v1-build-env:v1.0.0 //更改<span class="hljs-built_in">id</span><br><br>docker push hub.com/tceforqci_arm/api-v1-build-env:v1.0.0 //推送镜像<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux</title>
    <link href="/2023/01/19/Linux/"/>
    <url>/2023/01/19/Linux/</url>
    
    <content type="html"><![CDATA[<h2 id="cpu篇"><a href="#cpu篇" class="headerlink" title="cpu篇"></a>cpu篇</h2><h4 id="1、具有相同core-id的cpu是同一个core的超线程"><a href="#1、具有相同core-id的cpu是同一个core的超线程" class="headerlink" title="1、具有相同core id的cpu是同一个core的超线程"></a>1、具有相同core id的cpu是同一个core的超线程</h4><h4 id="2、具有相同physical-id的cpu是同一颗cpu封装的线程或者cores"><a href="#2、具有相同physical-id的cpu是同一颗cpu封装的线程或者cores" class="headerlink" title="2、具有相同physical id的cpu是同一颗cpu封装的线程或者cores"></a>2、具有相同physical id的cpu是同一颗cpu封装的线程或者cores</h4><h4 id="逻辑CPU个数"><a href="#逻辑CPU个数" class="headerlink" title="逻辑CPU个数"></a>逻辑CPU个数</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-built_in">cat</span> /proc/cpuinfo | grep <span class="hljs-string">&quot;processor&quot;</span> | <span class="hljs-built_in">wc</span> -l<br><br></code></pre></td></tr></table></figure><h4 id="物理CPU个数"><a href="#物理CPU个数" class="headerlink" title="物理CPU个数"></a>物理CPU个数</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-built_in">cat</span> /proc/cpuinfo | grep <span class="hljs-string">&quot;physical id&quot;</span> | <span class="hljs-built_in">sort</span> -u | <span class="hljs-built_in">wc</span> -l<br><br></code></pre></td></tr></table></figure><h4 id="每个物理CPU中Core的个数："><a href="#每个物理CPU中Core的个数：" class="headerlink" title="每个物理CPU中Core的个数："></a>每个物理CPU中Core的个数：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-built_in">cat</span> /proc/cpuinfo | grep <span class="hljs-string">&quot;cpu cores&quot;</span> | <span class="hljs-built_in">uniq</span> | awk -F: <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span><br><br></code></pre></td></tr></table></figure><h4 id="查看core-id的数量-即为所有物理CPU上的core的个数"><a href="#查看core-id的数量-即为所有物理CPU上的core的个数" class="headerlink" title="查看core id的数量,即为所有物理CPU上的core的个数"></a>查看core id的数量,即为所有物理CPU上的core的个数</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-built_in">cat</span> /proc/cpuinfo | grep <span class="hljs-string">&quot;core id&quot;</span> | <span class="hljs-built_in">uniq</span> |  <span class="hljs-built_in">wc</span> -l<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>版本控制 Git</title>
    <link href="/2023/01/19/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6-Git/"/>
    <url>/2023/01/19/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6-Git/</url>
    
    <content type="html"><![CDATA[<h3 id="git参考文档"><a href="#git参考文档" class="headerlink" title="git参考文档"></a><a href="https://www.yiibai.com/git/git_tag.html">git参考文档</a></h3><h4 id="clone项目及其子项目"><a href="#clone项目及其子项目" class="headerlink" title="clone项目及其子项目"></a>clone项目及其子项目</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> --recursive https://github.com/imtianx/MainProject.git<br></code></pre></td></tr></table></figure><h4 id="GItmodule"><a href="#GItmodule" class="headerlink" title="GItmodule"></a>GItmodule</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git submodule init<br>git submodule update<br>git submodule update --init --recursive<br></code></pre></td></tr></table></figure><h4 id="回退远程分支至某commitid"><a href="#回退远程分支至某commitid" class="headerlink" title="回退远程分支至某commitid"></a>回退远程分支至某commitid</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs git">git reset --hard  committeid<br>git log --oneline<br>git push  -f<br></code></pre></td></tr></table></figure><h4 id="放弃本地所有修改"><a href="#放弃本地所有修改" class="headerlink" title="放弃本地所有修改"></a>放弃本地所有修改</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs git">git checkout .<br></code></pre></td></tr></table></figure><h4 id="删除远程分支"><a href="#删除远程分支" class="headerlink" title="删除远程分支"></a>删除远程分支</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs git">git push origin :***<br></code></pre></td></tr></table></figure><h4 id="删除本地分支"><a href="#删除本地分支" class="headerlink" title="删除本地分支"></a>删除本地分支</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs git">git branch -D  ***<br></code></pre></td></tr></table></figure><h4 id="撤销本地commit并保留代码"><a href="#撤销本地commit并保留代码" class="headerlink" title="撤销本地commit并保留代码"></a>撤销本地commit并保留代码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs git">git reset --soft HEAD~1<br></code></pre></td></tr></table></figure><h4 id="撤销本地commit不保留代码"><a href="#撤销本地commit不保留代码" class="headerlink" title="撤销本地commit不保留代码"></a>撤销本地commit不保留代码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs git">git reset --hard HEAD<br></code></pre></td></tr></table></figure><h4 id="撤销add"><a href="#撤销add" class="headerlink" title="撤销add"></a>撤销add</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs git">git reset HEAD  *<br></code></pre></td></tr></table></figure><h4 id="合并忽律空白冲突"><a href="#合并忽律空白冲突" class="headerlink" title="合并忽律空白冲突"></a>合并忽律空白冲突</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs git">git merge -Xignore-space-change whitespace<br></code></pre></td></tr></table></figure><h4 id="合并某个分支单个commit"><a href="#合并某个分支单个commit" class="headerlink" title="合并某个分支单个commit"></a>合并某个分支单个commit</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs git">git checkout master    //先切换到要合并的分支<br>git cherry-pick 62ecb3    //再使用cherry-pick命令<br></code></pre></td></tr></table></figure><h4 id="按照固定格式查看git记录"><a href="#按照固定格式查看git记录" class="headerlink" title="按照固定格式查看git记录"></a>按照固定格式查看git记录</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs git">git log --pretty=format:&quot;%h:%an, %ar  : %s&quot;<br></code></pre></td></tr></table></figure><h4 id="追加本地修改到上次commit"><a href="#追加本地修改到上次commit" class="headerlink" title="追加本地修改到上次commit"></a>追加本地修改到上次commit</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs git">git commit --amend<br></code></pre></td></tr></table></figure><h4 id="合并当前修改到某次commit"><a href="#合并当前修改到某次commit" class="headerlink" title="合并当前修改到某次commit"></a>合并当前修改到某次commit</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs git">git checkout -b rebase_tmp  //创临时分支用于rebase<br>git stash   //暂存本地修改<br>git rebase -i f744c32^   //移动head到要合并的commit的父提交处<br>找到需要合并的commit, 将行首的pick改成edit, 按esc, 输入:wq退出<br>git stash pop<br>git add .<br>git commit --amend<br>git rebase --continue<br></code></pre></td></tr></table></figure><h4 id="将本地项目推到远程空仓库"><a href="#将本地项目推到远程空仓库" class="headerlink" title="将本地项目推到远程空仓库"></a>将本地项目推到远程空仓库</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs git">git init<br>git add .<br>git commit -m &#x27;init&#x27;<br>git remote add origin git@git.woa.com:qcloud_middleware/apigw/compliance.git<br>git pull origin master --allow-unrelated-histories<br>git push -u origin master <br></code></pre></td></tr></table></figure><h4 id="取消远程仓库地址关联"><a href="#取消远程仓库地址关联" class="headerlink" title="取消远程仓库地址关联"></a>取消远程仓库地址关联</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git remote <span class="hljs-built_in">rm</span> origin<br></code></pre></td></tr></table></figure><h4 id="重新关联远程仓库地址"><a href="#重新关联远程仓库地址" class="headerlink" title="重新关联远程仓库地址"></a>重新关联远程仓库地址</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git remote add origin https://github.com/developers-youcong/Metronic_Template.git<br></code></pre></td></tr></table></figure><h4 id="创建标签"><a href="#创建标签" class="headerlink" title="创建标签"></a>创建标签</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git tag -a v1.4 -m <span class="hljs-string">&#x27;my version 1.4&#x27;</span><br></code></pre></td></tr></table></figure><h4 id="删除标签"><a href="#删除标签" class="headerlink" title="删除标签"></a>删除标签</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git tag -d v1.0<br></code></pre></td></tr></table></figure><h4 id="某个commit补标签"><a href="#某个commit补标签" class="headerlink" title="某个commit补标签"></a>某个commit补标签</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git tag -a v1.2 9fceb02<br></code></pre></td></tr></table></figure><h4 id="推送某个标签到远程"><a href="#推送某个标签到远程" class="headerlink" title="推送某个标签到远程"></a>推送某个标签到远程</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git push origin v1.5<br></code></pre></td></tr></table></figure><h4 id="将本地标签全部推送远程"><a href="#将本地标签全部推送远程" class="headerlink" title="将本地标签全部推送远程"></a>将本地标签全部推送远程</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git push origin --tags<br></code></pre></td></tr></table></figure><h4 id="将连续多个commit合并成一个commit"><a href="#将连续多个commit合并成一个commit" class="headerlink" title="将连续多个commit合并成一个commit"></a>将连续多个commit合并成一个commit</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>git rebase -i d6c2b9f83c764306a83badf653f3d08a95bad1cd   //变基到需要合并commit的前一个commit<br><br>然后你会看到下面的界面  pick是最终合并的<span class="hljs-built_in">id</span>  把其他都改成 s<br><br>pick e1f5627 v2---&gt;v3接口优化<br><br>s 9a0fb8e 解决<br><br>s 7f49f21 修改<br><br>s 828ae3b sh<br><br>s 2766da3 modules<br><br>然后保存,连续两次保存<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/01/16/hello-world/"/>
    <url>/2023/01/16/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
